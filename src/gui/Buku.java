/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

//Import library database
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

//Import library GUI
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;



/**
 *
 * @author mzenm
 */
public class Buku extends javax.swing.JFrame {
    Connection con; //koneksi
    ResultSet rs;   //query
    PreparedStatement pst; //manipulasi database
    
    

    /**
     * Creates new form Buku
     */
    public Buku() {
        initComponents();
        
        setLocationRelativeTo(null);
        
    try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        con = DriverManager.getConnection("jdbc:mysql://localhost:3306/penjualan_buku", "root", "");
        
        String sql = "SELECT * FROM buku";
        pst = con.prepareStatement(sql);
        rs = pst.executeQuery();
        
        while (rs.next()){
         // menampilkan data buku ke table
         String kode = String.valueOf(rs.getString("kode"));
         String judul = String.valueOf(rs.getString("judul"));
         String pengarang = String.valueOf(rs.getString("pengarang"));
         String penerbit = String.valueOf(rs.getString("penerbit"));
         String stok = String.valueOf(rs.getString("stok"));
         String harga = String.valueOf(rs.getString("harga"));
         String pemasok = String.valueOf(rs.getString("pemasok"));
         
         String tbData[] = {kode, judul, pengarang, penerbit, stok, harga, pemasok};
         DefaultTableModel tampilModel = (DefaultTableModel) tblBuku.getModel();

         tampilModel.addRow(tbData);
         }
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Buku.class.getName()).log(Level.SEVERE, "MySQL JDBC Driver not found", ex);
        } catch (SQLException ex) {
            Logger.getLogger(Buku.class.getName()).log(Level.SEVERE, null, ex);
        }
    
        //select Pemasok
        try {
        String sql = "SELECT * FROM pemasok";
        pst = con.prepareStatement(sql);
        rs = pst.executeQuery();

        while (rs.next()) {
            cmbPemasok.addItem(rs.getString("nama"));
        }
        } catch (Exception e){
    
        }
    
            int totalBuku = 0;
            int hargaTertinggi = 0;
            int hargaTerendah = Integer.MAX_VALUE;

            for (int i = 0; i < tblBuku.getRowCount(); i++) {
                Object jumlah = tblBuku.getValueAt(i, 4);
                Object hargaBuku = tblBuku.getValueAt(i, 5);
                
                 // Update jumlah buku
                if (jumlah != null) {
                    totalBuku += Integer.parseInt(jumlah.toString());
                }

                if (hargaBuku != null) {
                    int price = Integer.parseInt(hargaBuku.toString());

                    // Update harga tertinggi
                    if (price > hargaTertinggi) {
                        hargaTertinggi = price;
                    }

                    // Update harga terendah
                    if (price < hargaTerendah) {
                        hargaTerendah = price;
                    }
                }
            }
            if (hargaTerendah == Integer.MAX_VALUE) {
            hargaTerendah = 0;
            }

            // Update
            lblJumlah.setText(Integer.toString(totalBuku));
            lblTertinggi.setText("Rp " + Integer.toString(hargaTertinggi));
            lblTerendah.setText("Rp " + Integer.toString(hargaTerendah));  
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuBar1 = new java.awt.MenuBar();
        menu1 = new java.awt.Menu();
        menu2 = new java.awt.Menu();
        utamaPanel = new javax.swing.JPanel();
        navigasiPanel = new javax.swing.JPanel();
        tfCari = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        outputPanel = new javax.swing.JPanel();
        jumlahBukuPanel = new javax.swing.JPanel();
        lblJumlah = new javax.swing.JLabel();
        hargaTertinggiPanel = new javax.swing.JPanel();
        lblTertinggi = new javax.swing.JLabel();
        hargaTerendahPanel = new javax.swing.JPanel();
        lblTerendah = new javax.swing.JLabel();
        inputanPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBuku = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfKode = new javax.swing.JTextField();
        tfJudul = new javax.swing.JTextField();
        tfStok = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tfHarga = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        tfPengarang = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        tfPenerbit = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        cmbPemasok = new javax.swing.JComboBox<>();
        btnTambah = new javax.swing.JButton();
        btnUbah = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        headerPanel = new javax.swing.JPanel();
        lblForm = new javax.swing.JLabel();
        btnKembali = new javax.swing.JButton();

        menu1.setLabel("File");
        menuBar1.add(menu1);

        menu2.setLabel("Edit");
        menuBar1.add(menu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Form Buku");
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(255, 255, 255));
        setFont(new java.awt.Font("Agency FB", 1, 10)); // NOI18N

        utamaPanel.setBackground(new java.awt.Color(102, 153, 255));

        navigasiPanel.setBackground(new java.awt.Color(153, 204, 255));

        tfCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfCariKeyReleased(evt);
            }
        });

        jLabel7.setText("Cari :");

        javax.swing.GroupLayout navigasiPanelLayout = new javax.swing.GroupLayout(navigasiPanel);
        navigasiPanel.setLayout(navigasiPanelLayout);
        navigasiPanelLayout.setHorizontalGroup(
            navigasiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, navigasiPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfCari, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        navigasiPanelLayout.setVerticalGroup(
            navigasiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, navigasiPanelLayout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(navigasiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(8, 8, 8))
        );

        outputPanel.setBackground(new java.awt.Color(153, 204, 255));
        outputPanel.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N

        jumlahBukuPanel.setBackground(new java.awt.Color(102, 153, 255));
        jumlahBukuPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Jumlah Buku", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N
        jumlahBukuPanel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        lblJumlah.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        javax.swing.GroupLayout jumlahBukuPanelLayout = new javax.swing.GroupLayout(jumlahBukuPanel);
        jumlahBukuPanel.setLayout(jumlahBukuPanelLayout);
        jumlahBukuPanelLayout.setHorizontalGroup(
            jumlahBukuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jumlahBukuPanelLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(lblJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jumlahBukuPanelLayout.setVerticalGroup(
            jumlahBukuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jumlahBukuPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        hargaTertinggiPanel.setBackground(new java.awt.Color(102, 153, 255));
        hargaTertinggiPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Harga Tertinggi", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        lblTertinggi.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        javax.swing.GroupLayout hargaTertinggiPanelLayout = new javax.swing.GroupLayout(hargaTertinggiPanel);
        hargaTertinggiPanel.setLayout(hargaTertinggiPanelLayout);
        hargaTertinggiPanelLayout.setHorizontalGroup(
            hargaTertinggiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hargaTertinggiPanelLayout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(lblTertinggi, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        hargaTertinggiPanelLayout.setVerticalGroup(
            hargaTertinggiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hargaTertinggiPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lblTertinggi, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        hargaTerendahPanel.setBackground(new java.awt.Color(102, 153, 255));
        hargaTerendahPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Harga Terendah", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        lblTerendah.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        javax.swing.GroupLayout hargaTerendahPanelLayout = new javax.swing.GroupLayout(hargaTerendahPanel);
        hargaTerendahPanel.setLayout(hargaTerendahPanelLayout);
        hargaTerendahPanelLayout.setHorizontalGroup(
            hargaTerendahPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hargaTerendahPanelLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(lblTerendah, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        hargaTerendahPanelLayout.setVerticalGroup(
            hargaTerendahPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hargaTerendahPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblTerendah, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout outputPanelLayout = new javax.swing.GroupLayout(outputPanel);
        outputPanel.setLayout(outputPanelLayout);
        outputPanelLayout.setHorizontalGroup(
            outputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(outputPanelLayout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(jumlahBukuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(132, 132, 132)
                .addComponent(hargaTertinggiPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(hargaTerendahPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(134, 134, 134))
        );
        outputPanelLayout.setVerticalGroup(
            outputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(outputPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(outputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(hargaTertinggiPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jumlahBukuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hargaTerendahPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        inputanPanel.setBackground(new java.awt.Color(153, 204, 255));

        tblBuku.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode", "Judul Buku", "Pengarang", "Penerbit", "Stok", "Harga", "Pemasok"
            }
        ));
        tblBuku.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblBuku.setGridColor(new java.awt.Color(153, 153, 153));
        tblBuku.setSelectionBackground(new java.awt.Color(153, 204, 255));
        tblBuku.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tblBuku.setShowHorizontalLines(true);
        tblBuku.setShowVerticalLines(true);
        tblBuku.getTableHeader().setReorderingAllowed(false);
        tblBuku.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBukuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblBuku);
        if (tblBuku.getColumnModel().getColumnCount() > 0) {
            tblBuku.getColumnModel().getColumn(0).setMinWidth(42);
            tblBuku.getColumnModel().getColumn(0).setMaxWidth(42);
            tblBuku.getColumnModel().getColumn(1).setMinWidth(115);
            tblBuku.getColumnModel().getColumn(1).setMaxWidth(115);
            tblBuku.getColumnModel().getColumn(2).setMinWidth(100);
            tblBuku.getColumnModel().getColumn(2).setMaxWidth(100);
            tblBuku.getColumnModel().getColumn(3).setMinWidth(95);
            tblBuku.getColumnModel().getColumn(3).setMaxWidth(95);
            tblBuku.getColumnModel().getColumn(4).setMinWidth(35);
            tblBuku.getColumnModel().getColumn(4).setMaxWidth(35);
            tblBuku.getColumnModel().getColumn(5).setMinWidth(54);
            tblBuku.getColumnModel().getColumn(5).setMaxWidth(54);
            tblBuku.getColumnModel().getColumn(6).setMinWidth(129);
            tblBuku.getColumnModel().getColumn(6).setMaxWidth(129);
        }

        jPanel2.setBackground(new java.awt.Color(102, 153, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Input Buku", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        jLabel1.setText("Kode");

        jLabel2.setText("Judul");

        jLabel3.setText("Stok");

        jLabel4.setText("Harga");

        tfStok.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfStokKeyTyped(evt);
            }
        });

        jLabel5.setText("Pemasok");

        tfHarga.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfHargaKeyTyped(evt);
            }
        });

        jLabel6.setText(":");

        jLabel9.setText(":");

        jLabel10.setText(":");

        jLabel11.setText(":");

        jLabel12.setText(":");

        jLabel13.setText("Pengarang");

        jLabel14.setText(":");

        jLabel15.setText("Penerbit");

        jLabel16.setText(":");

        cmbPemasok.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Pilih Pemasok--" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(83, Short.MAX_VALUE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tfStok, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                    .addComponent(tfJudul, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                    .addComponent(tfKode)
                    .addComponent(tfPengarang)
                    .addComponent(tfPenerbit)
                    .addComponent(tfHarga, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                    .addComponent(cmbPemasok, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(22, 22, 22))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6)
                    .addComponent(tfKode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel9)
                    .addComponent(tfJudul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfPengarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfPenerbit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel10)
                    .addComponent(tfStok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel11)
                    .addComponent(tfHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel5)
                    .addComponent(cmbPemasok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        btnTambah.setBackground(new java.awt.Color(153, 255, 102));
        btnTambah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Tambah.png"))); // NOI18N
        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnUbah.setBackground(new java.awt.Color(255, 142, 86));
        btnUbah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Ubah.png"))); // NOI18N
        btnUbah.setText("Ubah");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });

        btnHapus.setBackground(new java.awt.Color(255, 51, 102));
        btnHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Hapus.png"))); // NOI18N
        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(163, 133, 104));
        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Clear.png"))); // NOI18N
        btnClear.setText("Clear");
        btnClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnClearMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout inputanPanelLayout = new javax.swing.GroupLayout(inputanPanel);
        inputanPanel.setLayout(inputanPanelLayout);
        inputanPanelLayout.setHorizontalGroup(
            inputanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputanPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inputanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(inputanPanelLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(btnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(btnUbah, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(inputanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inputanPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(inputanPanelLayout.createSequentialGroup()
                        .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(96, 96, 96)
                        .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        inputanPanelLayout.setVerticalGroup(
            inputanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputanPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inputanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(inputanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnClear)
                    .addGroup(inputanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnUbah)
                        .addComponent(btnTambah)
                        .addComponent(btnHapus)))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        headerPanel.setBackground(new java.awt.Color(153, 204, 255));
        headerPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblForm.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        lblForm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Buku.png"))); // NOI18N
        lblForm.setText("FORM BUKU");
        headerPanel.add(lblForm, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 160, 59));

        btnKembali.setBackground(new java.awt.Color(102, 153, 255));
        btnKembali.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Kembali.png"))); // NOI18N
        btnKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKembaliActionPerformed(evt);
            }
        });
        headerPanel.add(btnKembali, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 10, 40, 40));

        javax.swing.GroupLayout utamaPanelLayout = new javax.swing.GroupLayout(utamaPanel);
        utamaPanel.setLayout(utamaPanelLayout);
        utamaPanelLayout.setHorizontalGroup(
            utamaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(utamaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(utamaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(outputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(utamaPanelLayout.createSequentialGroup()
                        .addGroup(utamaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(navigasiPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(headerPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inputanPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        utamaPanelLayout.setVerticalGroup(
            utamaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, utamaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(navigasiPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputanPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(outputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(utamaPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(utamaPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
    //Mengecek nilai yang di input
if (tfKode.getText().equals("") || tfJudul.getText().equals("") || tfPengarang.getText().equals("") ||
    tfPenerbit.getText().equals("") || tfStok.getText().equals("") || tfHarga.getText().equals("") || 
    cmbPemasok.getSelectedItem().equals("--Pilih Pemasok--")) {
    JOptionPane.showMessageDialog(null, "Lengkapi Data Yang Kosong..!",
            "Error", JOptionPane.WARNING_MESSAGE);
} else {
    // Pemeriksaan ID tidak boleh sama
    boolean kodeSudahAda = false;
    DefaultTableModel model = (DefaultTableModel) tblBuku.getModel();

    for (int i = 0; i < model.getRowCount(); i++) {
        if (tfKode.getText().equals(model.getValueAt(i, 0))) {
            kodeSudahAda = true;
            break;
        }
    }

    if (kodeSudahAda) {
        JOptionPane.showMessageDialog(null, "KODE sudah terdaftar, masukkan KODE yang berbeda",
                "Error", JOptionPane.WARNING_MESSAGE);
    tfKode.requestFocus();
    } else {
        
   //Membuat koneksi agar dapat menipulasi data Buku pada Database    
try {
    pst = con.prepareStatement("INSERT into buku(kode,judul,pengarang,penerbit,stok,harga,pemasok)values(?,?,?,?,?,?,?)");
    pst.setString(1, tfKode.getText());
    pst.setString(2, tfJudul.getText());
    pst.setString(3, tfPengarang.getText());
    pst.setString(4, tfPenerbit.getText());
    pst.setString(5, tfStok.getText());
    pst.setString(6, tfHarga.getText());
    pst.setString(7, cmbPemasok.getSelectedItem().toString()); 
    pst.executeUpdate();
    
} catch (SQLException ex) {
    Logger.getLogger(Buku.class.getName()).log(Level.SEVERE, null, ex);
}
        
        // Menambahkan data ke dalam row
    int harga = Integer.parseInt(tfHarga.getText());
    int stok   = Integer.parseInt(tfStok.getText());
    model.addRow(new Object[]{tfKode.getText(), tfJudul.getText(), tfPengarang.getText(),
                              tfPenerbit.getText(), stok, harga,cmbPemasok.getSelectedItem().toString()});
    JOptionPane.showMessageDialog(null, "Data Berhasil Ditambahkan");
    
            int totalBuku = 0;
            int hargaTertinggi = 0;
            int hargaTerendah = Integer.MAX_VALUE;

            for (int i = 0; i < tblBuku.getRowCount(); i++) {
                Object jumlah = tblBuku.getValueAt(i, 4);
                Object hargaBuku = tblBuku.getValueAt(i, 5);
                
                 // Update jumlah buku setelah tambah data
                if (jumlah != null) {
                    totalBuku += Integer.parseInt(jumlah.toString());
                }

                if (hargaBuku != null) {
                    int price = Integer.parseInt(hargaBuku.toString());

                    // Update harga tertinggi setelah tambah data
                    if (price > hargaTertinggi) {
                        hargaTertinggi = price;
                    }

                    // Update harga terendah setelah tambah data
                    if (price < hargaTerendah) {
                        hargaTerendah = price;
                    }
                }
            }

            // Update label setelah tambah data
            lblJumlah.setText(Integer.toString(totalBuku));
            lblTertinggi.setText("Rp " + Integer.toString(hargaTertinggi));
            lblTerendah.setText("Rp " + Integer.toString(hargaTerendah));
        
     //Membersihkan field setelah data berhasil terinput
        tfKode.setText("");
        tfJudul.setText("");
        tfPengarang.setText("");
        tfPenerbit.setText("");
        tfStok.setText("");
        tfHarga.setText(null);
        cmbPemasok.setSelectedItem("--Pilih Pemasok--");
        tfKode.requestFocus();
        }     
}
    }//GEN-LAST:event_btnTambahActionPerformed
    
    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
    //Mengecek pemilihan data
        if (tfKode.getText().equals("") || tfJudul.getText().equals("") || tfPengarang.getText().equals("") ||
            tfPenerbit.getText().equals("") || tfStok.getText().equals("") || tfHarga.getText().equals("") || 
            cmbPemasok.getSelectedItem().equals("--Pilih Pemasok--")) {
            JOptionPane.showMessageDialog(null, "Pilih Data Terlebih Dahulu..!",
            "Error", JOptionPane.WARNING_MESSAGE);
     }else{
    //Konfirmasi hapus data
    int hapus = JOptionPane.showConfirmDialog(null, "Anda yakin menghapus data?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
           if (hapus == JOptionPane.YES_OPTION) {
               
    // Menghapus data dalam database
        try {
    pst = con.prepareStatement("DELETE FROM buku WHERE kode=?");
    pst.setString(1, tfKode.getText());
    pst.executeUpdate();
    pst.close(); // Menutup PreparedStatement setelah digunakan
    JOptionPane.showMessageDialog(null, "Data Berhasil Dihapus");

    } catch (SQLException ex) {
        Logger.getLogger(Buku.class.getName()).log(Level.SEVERE, null, ex);
    }
        
        //Membersihkan inputan
        tfKode.setText("");
        tfJudul.setText("");
        tfPengarang.setText("");
        tfPenerbit.setText("");
        tfStok.setText(null);
        tfHarga.setText(null);
        cmbPemasok.setSelectedItem("--Pilih Pemasok--");
        tfKode.requestFocus();
        
    //Menghapus data dalam row
    int getSelectedRowForDeletion = tblBuku.getSelectedRow();
    if (getSelectedRowForDeletion >= 0) {
        DefaultTableModel model = (DefaultTableModel) tblBuku.getModel();
        model.removeRow(getSelectedRowForDeletion);
        JOptionPane.showMessageDialog(null, "Data Berhasil Dihapus"); 
         } 
    
            int totalBuku = 0;
            int hargaTertinggi = 0;
            int hargaTerendah = Integer.MAX_VALUE;

            for (int i = 0; i < tblBuku.getRowCount(); i++) {
                Object jumlah = tblBuku.getValueAt(i, 4);
                Object hargaBuku = tblBuku.getValueAt(i, 5);
                
                 // Update jumlah buku setelah hapus data
                if (jumlah != null) {
                    totalBuku += Integer.parseInt(jumlah.toString());
                }

                if (hargaBuku != null) {
                    int price = Integer.parseInt(hargaBuku.toString());

                    // Update harga tertinggi setelah hapus data
                    if (price > hargaTertinggi) {
                        hargaTertinggi = price;
                    }

                    // Update harga terendah setelah hapus data
                    if (price < hargaTerendah) {
                        hargaTerendah = price;
                    } 
                }
            }
            if (hargaTerendah == Integer.MAX_VALUE) {
            hargaTerendah = 0;
            }

            // Update label setelah hapus data
            lblJumlah.setText(Integer.toString(totalBuku));
            lblTertinggi.setText("Rp " + Integer.toString(hargaTertinggi));            

    }//GEN-LAST:event_btnHapusActionPerformed
}
    }
    private void btnClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearMouseClicked
        //Membersihkan field dan combobox
        tfKode.setText("");
        tfJudul.setText("");
        tfPengarang.setText("");
        tfPenerbit.setText("");
        tfStok.setText(null);
        tfHarga.setText(null);
        cmbPemasok.setSelectedItem("--Pilih Pemasok--");
        tfKode.requestFocus();
       
        
    }//GEN-LAST:event_btnClearMouseClicked
   
    private void tblBukuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBukuMouseClicked
        //Menampilkan Data dari Jtable ke TextFiled
        int selectedRow = tblBuku.getSelectedRow();
        
        DefaultTableModel model = (DefaultTableModel) tblBuku.getModel();
        tfKode.setText(model.getValueAt(selectedRow, 0).toString());
        tfJudul.setText(model.getValueAt(selectedRow, 1).toString());
        tfPengarang.setText(model.getValueAt(selectedRow, 2).toString());
        tfPenerbit.setText(model.getValueAt(selectedRow, 3).toString());
        tfStok.setText(model.getValueAt(selectedRow, 4).toString());
        tfHarga.setText(model.getValueAt(selectedRow, 5).toString());
        String comboSub = model.getValueAt(selectedRow, 6).toString();

        for (int i = 0; i < cmbPemasok.getItemCount(); i++) {
            if (cmbPemasok.getItemAt(i).toString().equalsIgnoreCase(comboSub)) {
        cmbPemasok.setSelectedIndex(i);
        break;
         }
    }

    }//GEN-LAST:event_tblBukuMouseClicked

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
        //Mengecek pemilihan data
        if (tfKode.getText().equals("") || tfJudul.getText().equals("") || tfPengarang.getText().equals("") ||
            tfPenerbit.getText().equals("") || tfStok.getText().equals("") || tfHarga.getText().equals("") || 
            cmbPemasok.getSelectedItem().equals("--Pilih Pemasok--")) {
            JOptionPane.showMessageDialog(null, "Pilih Data Terlebih Dahulu..!",
            "Error", JOptionPane.WARNING_MESSAGE);
        }else{
    
        
        //Konfirmasi ubah data  
        int ubah = JOptionPane.showConfirmDialog(null, "Anda yakin mengubah data?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
                if (ubah == JOptionPane.YES_OPTION) {
                    
        // Mengubah data dalam database

            try {
                    // Mengubah data dalam database
            pst = con.prepareStatement("UPDATE buku SET kode=?, judul=?, pengarang=?, penerbit=?, stok=?, harga=?, pemasok=? WHERE kode=?");
            pst.setString(1, tfKode.getText());
            pst.setString(2, tfJudul.getText());
            pst.setString(3, tfPengarang.getText());
            pst.setString(4, tfPenerbit.getText());
            int stok = Integer.parseInt(tfStok.getText());
            pst.setString(5, tfStok.getText());
            int harga = Integer.parseInt(tfHarga.getText());
            pst.setString(6, tfHarga.getText());
            pst.setString(7, cmbPemasok.getSelectedItem().toString());
            pst.setString(8, tfKode.getText());
            pst.executeUpdate();
            pst.close();
            JOptionPane.showMessageDialog(null, "Data Berhasil Diubah");
                                         
            // Mengubah data dalam row di tabel
            int selectedRow = tblBuku.getSelectedRow();
            if (selectedRow >= 0) {
                DefaultTableModel model = (DefaultTableModel) tblBuku.getModel();
                model.setValueAt(tfKode.getText(), selectedRow, 0);
                model.setValueAt(tfJudul.getText(), selectedRow, 1);
                model.setValueAt(tfPengarang.getText(), selectedRow, 2);
                model.setValueAt(tfPenerbit.getText(), selectedRow, 3);
                model.setValueAt(tfStok.getText(), selectedRow, 4);
                model.setValueAt(tfHarga.getText(), selectedRow, 5);
                model.setValueAt(cmbPemasok.getSelectedItem().toString(), selectedRow, 6);
                
            }
            
            int totalBuku = 0;
            int hargaTertinggi = 0;
            int hargaTerendah = Integer.MAX_VALUE;

            for (int i = 0; i < tblBuku.getRowCount(); i++) {
                Object jumlah = tblBuku.getValueAt(i, 4);
                Object hargaBuku = tblBuku.getValueAt(i, 5);
                
                 // Update jumlah buku setelah ubah data
                if (jumlah != null) {
                    totalBuku += Integer.parseInt(jumlah.toString());
                }

                if (hargaBuku != null) {
                    int price = Integer.parseInt(hargaBuku.toString());

                    // Update harga tertinggi setelah ubah data
                    if (price > hargaTertinggi) {
                        hargaTertinggi = price;
                    }

                    // Update harga terendah setelah ubah data
                    if (price < hargaTerendah) {
                        hargaTerendah = price;
                    }
                }
            }

            // Update label setelah ubah data
            lblJumlah.setText(Integer.toString(totalBuku));
            lblTertinggi.setText("Rp " + Integer.toString(hargaTertinggi));
            lblTerendah.setText("Rp " + Integer.toString(hargaTerendah));

            // Membersihkan input setelah berhasil mengubah data
            tfKode.setText("");
            tfJudul.setText("");
            tfPengarang.setText("");
            tfPenerbit.setText("");
            tfStok.setText("");
            tfHarga.setText(null);
            cmbPemasok.setSelectedItem("Televisi");
            tfKode.requestFocus();

        } catch (SQLException ex) {
            Logger.getLogger(Buku.class.getName()).log(Level.SEVERE, null, ex);
        }
                }
        }
                
    }//GEN-LAST:event_btnUbahActionPerformed

    private void tfHargaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfHargaKeyTyped
        //memanggil method KeyTyped
        filterKeyTyped(evt);
        tfHarga.requestFocus();
    }//GEN-LAST:event_tfHargaKeyTyped

    private void tfStokKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfStokKeyTyped
        //memanggil method KeyTyped
        filterKeyTyped(evt);
        tfStok.requestFocus();
    }//GEN-LAST:event_tfStokKeyTyped

    private void btnKembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKembaliActionPerformed
        new MenuUtama().setVisible(true);
        dispose();
    }//GEN-LAST:event_btnKembaliActionPerformed

    private void tfCariKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfCariKeyReleased
        DefaultTableModel model=(DefaultTableModel) tblBuku.getModel();
        TableRowSorter<DefaultTableModel> model1= new TableRowSorter<>(model);
        tblBuku.setRowSorter(model1);
        model1.setRowFilter(RowFilter.regexFilter(tfCari.getText()));
    }//GEN-LAST:event_tfCariKeyReleased
 
    //Membuat method filter Nilai harus berupa angka
    private void filterKeyTyped(java.awt.event.KeyEvent evt) {
        char c = evt.getKeyChar();
        if (!((Character.isDigit(c)
                || (c == KeyEvent.VK_BACK_SPACE)
                || (c == KeyEvent.VK_DELETE)))) {
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "Error..!!!Masukan Hanya Angka ");
            evt.consume();
        }
    }
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Buku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Buku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Buku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Buku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Buku().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnKembali;
    private javax.swing.JButton btnTambah;
    private javax.swing.JButton btnUbah;
    private javax.swing.JComboBox<String> cmbPemasok;
    private javax.swing.JPanel hargaTerendahPanel;
    private javax.swing.JPanel hargaTertinggiPanel;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JPanel inputanPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel jumlahBukuPanel;
    private javax.swing.JLabel lblForm;
    private javax.swing.JLabel lblJumlah;
    private javax.swing.JLabel lblTerendah;
    private javax.swing.JLabel lblTertinggi;
    private java.awt.Menu menu1;
    private java.awt.Menu menu2;
    private java.awt.MenuBar menuBar1;
    private javax.swing.JPanel navigasiPanel;
    private javax.swing.JPanel outputPanel;
    private javax.swing.JTable tblBuku;
    private javax.swing.JTextField tfCari;
    private javax.swing.JTextField tfHarga;
    private javax.swing.JTextField tfJudul;
    private javax.swing.JTextField tfKode;
    private javax.swing.JTextField tfPenerbit;
    private javax.swing.JTextField tfPengarang;
    private javax.swing.JTextField tfStok;
    private javax.swing.JPanel utamaPanel;
    // End of variables declaration//GEN-END:variables

    
}
