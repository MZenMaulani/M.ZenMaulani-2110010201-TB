/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

//Import library database
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

//Import library GUI
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;


/**
 *
 * @author mzenm
 */
public class Penjualan extends javax.swing.JFrame {
    Connection con; //koneksi
    ResultSet rs;   //query
    PreparedStatement pst; //manipulasi database
    
    
    /**
     * Creates new form Penjualan
     */
    public Penjualan() {
        initComponents();
        
        setLocationRelativeTo(null);
        //memanggil method
        showDate();
        showTime();
        
        
            try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        con = DriverManager.getConnection("jdbc:mysql://localhost:3306/penjualan_buku", "root", "");
        
        String sql = "SELECT * FROM penjualan";
        pst = con.prepareStatement(sql);
        rs = pst.executeQuery();
        while (rs.next()){
         // menampilkan data buku ke table
         String no_transaksi = String.valueOf(rs.getString("no_transaksi"));
         String kode_buku = String.valueOf(rs.getString("kode_buku"));
         String id_pembeli = String.valueOf(rs.getString("id_pembeli"));
         String tanggal = String.valueOf(rs.getString("tanggal"));
         String jumlah = String.valueOf(rs.getString("jumlah"));
         String harga = String.valueOf(rs.getString("harga"));
         String total = String.valueOf(rs.getString("total"));
         
         String tbData[] = {no_transaksi, kode_buku, id_pembeli, tanggal, jumlah, harga, total};
         DefaultTableModel tampilModel = (DefaultTableModel) tblPenjualan.getModel();

         tampilModel.addRow(tbData);
         }
         auto_number();    
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Buku.class.getName()).log(Level.SEVERE, "MySQL JDBC Driver not found", ex);
        } catch (SQLException ex) {
            Logger.getLogger(Buku.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //Menghitung total biaya
        int totalBiaya = 0;
        for (int i = 0; i < tblPenjualan.getRowCount(); i++) {
            Object value = tblPenjualan.getValueAt(i, 6);
            if (value != null) {
               totalBiaya += Integer.parseInt(value.toString());
    }
}
        tfTotalBiaya.setText("0");
        tfTotalBiaya.setText(Integer.toString(totalBiaya));
       
        tfBayar.setText("0");
        tfKembalian.setText("0");
        
        //select Id pembeli
        try {
        String sql = "SELECT * FROM pembeli";
        pst = con.prepareStatement(sql);
        rs = pst.executeQuery();

        while (rs.next()) {
            cmbIdPembeli.addItem(rs.getString("id"));
        }
        } catch (Exception e){
    
        }
    
        //select Kode buku
        try {
        String sql = "SELECT * FROM buku";
        pst = con.prepareStatement(sql);
        rs = pst.executeQuery();

        while (rs.next()) {
            cmbKodeBuku.addItem(rs.getString("kode"));
        }
        } catch (Exception e){
    
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        utamaPanel = new javax.swing.JPanel();
        headerPanel = new javax.swing.JPanel();
        lblDate = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        lblForm = new javax.swing.JLabel();
        btnKembali = new javax.swing.JButton();
        inputanPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfNoTransaksi = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfHarga = new javax.swing.JTextField();
        sJumlah = new javax.swing.JSpinner();
        btnTambah = new javax.swing.JButton();
        btnUbah = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jTanggal = new com.toedter.calendar.JDateChooser();
        cmbIdPembeli = new javax.swing.JComboBox<>();
        cmbKodeBuku = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        tfCari = new javax.swing.JTextField();
        tabelPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPenjualan = new javax.swing.JTable();
        outputPanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        tfTotalBiaya = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        tfKembalian = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        taTampil = new javax.swing.JTextArea();
        btnTampil = new javax.swing.JButton();
        btnBayar = new javax.swing.JButton();
        tfBayar = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        utamaPanel.setBackground(new java.awt.Color(102, 102, 255));

        headerPanel.setBackground(new java.awt.Color(204, 204, 255));
        headerPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblDate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblDate.setText("Date");
        headerPanel.add(lblDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 0, 96, 59));

        lblTime.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTime.setText("Time");
        headerPanel.add(lblTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 0, 122, 59));

        lblForm.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        lblForm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Transaksi.png"))); // NOI18N
        lblForm.setText("FORM PENJUALAN");
        headerPanel.add(lblForm, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, 59));

        btnKembali.setBackground(new java.awt.Color(153, 153, 255));
        btnKembali.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Kembali.png"))); // NOI18N
        btnKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKembaliActionPerformed(evt);
            }
        });
        headerPanel.add(btnKembali, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 10, 40, 40));

        inputanPanel.setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setText("No Transaksi");

        jLabel2.setText("Kode Buku");

        tfNoTransaksi.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tfNoTransaksi.setEnabled(false);

        jLabel4.setText("ID Pembeli");

        jLabel5.setText("Jumlah");

        jLabel6.setText("Tanggal");

        tfHarga.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tfHarga.setEnabled(false);

        btnTambah.setBackground(new java.awt.Color(102, 153, 255));
        btnTambah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Tambah.png"))); // NOI18N
        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnUbah.setBackground(new java.awt.Color(255, 153, 102));
        btnUbah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Ubah.png"))); // NOI18N
        btnUbah.setText("Ubah");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });

        btnHapus.setBackground(new java.awt.Color(255, 102, 102));
        btnHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Hapus.png"))); // NOI18N
        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(153, 255, 153));
        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Clear.png"))); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        jLabel12.setText("Harga");

        cmbIdPembeli.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Pilih ID Pembeli--" }));

        cmbKodeBuku.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Pilih Kode Buku--" }));
        cmbKodeBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbKodeBukuActionPerformed(evt);
            }
        });

        jLabel3.setText("Cari :");

        tfCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfCariKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout inputanPanelLayout = new javax.swing.GroupLayout(inputanPanel);
        inputanPanel.setLayout(inputanPanelLayout);
        inputanPanelLayout.setHorizontalGroup(
            inputanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputanPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(inputanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(inputanPanelLayout.createSequentialGroup()
                        .addComponent(btnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUbah, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(inputanPanelLayout.createSequentialGroup()
                        .addGroup(inputanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(inputanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfNoTransaksi)
                            .addComponent(cmbIdPembeli, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbKodeBuku, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(29, 29, 29)
                .addGroup(inputanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(inputanPanelLayout.createSequentialGroup()
                        .addGroup(inputanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(inputanPanelLayout.createSequentialGroup()
                                .addGroup(inputanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(23, 23, 23))
                            .addGroup(inputanPanelLayout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)))
                        .addGroup(inputanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(inputanPanelLayout.createSequentialGroup()
                        .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(81, 81, 81)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfCari, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        inputanPanelLayout.setVerticalGroup(
            inputanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputanPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(inputanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(inputanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(tfNoTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)))
                .addGap(17, 17, 17)
                .addGroup(inputanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbKodeBuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(sJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(inputanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inputanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(tfHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(inputanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(cmbIdPembeli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addGroup(inputanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inputanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(tfCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(inputanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnTambah)
                        .addComponent(btnUbah)
                        .addComponent(btnHapus)
                        .addComponent(btnClear)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        tabelPanel.setBackground(new java.awt.Color(204, 204, 255));

        tblPenjualan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No Transaksi", "Kode Buku", "ID Pembeli", "Tanggal", "Jumlah", "Harga", "Total"
            }
        ));
        tblPenjualan.setShowHorizontalLines(true);
        tblPenjualan.setShowVerticalLines(true);
        tblPenjualan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPenjualanMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPenjualan);
        if (tblPenjualan.getColumnModel().getColumnCount() > 0) {
            tblPenjualan.getColumnModel().getColumn(0).setMinWidth(96);
            tblPenjualan.getColumnModel().getColumn(0).setMaxWidth(96);
            tblPenjualan.getColumnModel().getColumn(1).setMinWidth(80);
            tblPenjualan.getColumnModel().getColumn(1).setMaxWidth(80);
            tblPenjualan.getColumnModel().getColumn(2).setMinWidth(80);
            tblPenjualan.getColumnModel().getColumn(2).setMaxWidth(80);
            tblPenjualan.getColumnModel().getColumn(3).setMinWidth(160);
            tblPenjualan.getColumnModel().getColumn(3).setMaxWidth(160);
            tblPenjualan.getColumnModel().getColumn(4).setMinWidth(80);
            tblPenjualan.getColumnModel().getColumn(4).setMaxWidth(80);
            tblPenjualan.getColumnModel().getColumn(5).setMinWidth(125);
            tblPenjualan.getColumnModel().getColumn(5).setMaxWidth(125);
            tblPenjualan.getColumnModel().getColumn(6).setMinWidth(135);
            tblPenjualan.getColumnModel().getColumn(6).setMaxWidth(135);
        }

        javax.swing.GroupLayout tabelPanelLayout = new javax.swing.GroupLayout(tabelPanel);
        tabelPanel.setLayout(tabelPanelLayout);
        tabelPanelLayout.setHorizontalGroup(
            tabelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabelPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 762, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tabelPanelLayout.setVerticalGroup(
            tabelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabelPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        outputPanel.setBackground(new java.awt.Color(204, 204, 255));

        jLabel9.setText("Total Biaya");

        tfTotalBiaya.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tfTotalBiaya.setEnabled(false);

        jLabel10.setText("Bayar");

        jLabel11.setText("Kembalian");

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        taTampil.setColumns(20);
        taTampil.setRows(5);
        jScrollPane2.setViewportView(taTampil);

        btnTampil.setBackground(new java.awt.Color(255, 0, 153));
        btnTampil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Laporan.png"))); // NOI18N
        btnTampil.setText("Tampil");
        btnTampil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTampilActionPerformed(evt);
            }
        });

        btnBayar.setBackground(new java.awt.Color(153, 102, 255));
        btnBayar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Bayar.png"))); // NOI18N
        btnBayar.setText("Bayar");
        btnBayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBayarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout outputPanelLayout = new javax.swing.GroupLayout(outputPanel);
        outputPanel.setLayout(outputPanelLayout);
        outputPanelLayout.setHorizontalGroup(
            outputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(outputPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(outputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(outputPanelLayout.createSequentialGroup()
                        .addGroup(outputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(outputPanelLayout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jLabel11))
                            .addGroup(outputPanelLayout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(jLabel10))
                            .addGroup(outputPanelLayout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(jLabel9)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(outputPanelLayout.createSequentialGroup()
                        .addGroup(outputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfTotalBiaya, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfKembalian, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfBayar, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBayar, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnTampil)
                        .addGap(7, 7, 7)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        outputPanelLayout.setVerticalGroup(
            outputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(outputPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(outputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfTotalBiaya, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBayar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTampil))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfBayar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfKembalian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(outputPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout utamaPanelLayout = new javax.swing.GroupLayout(utamaPanel);
        utamaPanel.setLayout(utamaPanelLayout);
        utamaPanelLayout.setHorizontalGroup(
            utamaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, utamaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(utamaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, utamaPanelLayout.createSequentialGroup()
                        .addGroup(utamaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(outputPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tabelPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inputanPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        utamaPanelLayout.setVerticalGroup(
            utamaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(utamaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputanPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabelPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(outputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(utamaPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(utamaPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
    //Mengecek nilai yang di input
if (tfNoTransaksi.getText().equals("") || 
    cmbKodeBuku.getSelectedItem().equals("--Pilih Kode Buku--") || 
    cmbIdPembeli.getSelectedItem().equals("--Pilih ID Pembeli--") || 
    ((Number) sJumlah.getValue()).intValue() == 0 || 
    tfHarga.getText().equals("")) {
    JOptionPane.showMessageDialog(null, "Lengkapi Data Yang Kosong..!", "Error", JOptionPane.WARNING_MESSAGE);
} else {
    // Pemeriksaan No tidak boleh sama
    boolean NoSudahAda = false;
    DefaultTableModel model = (DefaultTableModel) tblPenjualan.getModel();

    for (int i = 0; i < model.getRowCount(); i++) {
        if (tfNoTransaksi.getText().equals(model.getValueAt(i, 0))) {
            NoSudahAda = true;
            break;
        }
    }

    if (NoSudahAda) {
        JOptionPane.showMessageDialog(null, "No Transaksi sudah terdaftar, masukkan KODE yang berbeda",
                "Error", JOptionPane.WARNING_MESSAGE);
    } else {
        
           //Membuat Koneksi agar dapat menipulasi data Penjualan pada Database  
    try {
        pst = con.prepareStatement("INSERT into penjualan(no_transaksi,kode_buku,id_pembeli,tanggal,jumlah,harga,total)values(?,?,?,?,?,?,?)");
        int noTransaksi = Integer.parseInt(tfNoTransaksi.getText());
        pst.setString(1, tfNoTransaksi.getText());
        pst.setString(2, cmbKodeBuku.getSelectedItem().toString());
        pst.setString(3, cmbIdPembeli.getSelectedItem().toString());
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        String formatTanggal = sdf.format(jTanggal.getDate());
        pst.setString(4, formatTanggal);
        int jumlah = (int) sJumlah.getValue();
        pst.setInt(5, jumlah);
        int harga = Integer.parseInt(tfHarga.getText());
        pst.setString(6, tfHarga.getText());
        int total = jumlah * harga; // Hitung total secara otomatis
        pst.setString(7, String.valueOf(total));
        pst.executeUpdate();
  
} catch (SQLException ex) {
    Logger.getLogger(Penjualan.class.getName()).log(Level.SEVERE, null, ex);
}
        
    //Membuat varibel untuk input kedalam row
    int noTransaksi = Integer.parseInt(tfNoTransaksi.getText());
    int harga = Integer.parseInt(tfHarga.getText());
    int jumlah = Integer.parseInt(sJumlah.getValue().toString());
    int total = harga * jumlah; 

    SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
    String formatTanggal = sdf.format(jTanggal.getDate());
        // Menambahkan data ke dalam row

        model.addRow(new Object[]{noTransaksi, cmbKodeBuku.getSelectedItem().toString(), cmbIdPembeli.getSelectedItem().toString(),
                                  formatTanggal, jumlah, harga, total});
    JOptionPane.showMessageDialog(null, "Data Berhasil Ditambahkan");
    
        //Menghitung total Biaya
        int totalBiaya = 0;
        for (int i = 0; i < model.getRowCount(); i++) {
            Object value = model.getValueAt(i, 6);
            if (value != null) {
                totalBiaya += Integer.parseInt(value.toString());
            }
        }
        tfTotalBiaya.setText(Integer.toString(totalBiaya));
        
        //Membersihkan inputan
        tfNoTransaksi.setText("");
        cmbKodeBuku.setSelectedItem("--Pilih Kode Buku--");
        cmbIdPembeli.setSelectedItem("--Pilih ID Pembeli--");
        sJumlah.setValue(0);
        tfHarga.setText("");
        tfNoTransaksi.requestFocus();
        auto_number();
    }
}
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
    //Mengecek nilai yang di input
    if (tfNoTransaksi.getText().equals("") || 
        cmbKodeBuku.getSelectedItem().equals("--Pilih Kode Buku--") || 
        cmbIdPembeli.getSelectedItem().equals("--Pilih ID Pembeli--") || 
        ((Number) sJumlah.getValue()).intValue() == 0 || 
        tfHarga.getText().equals("")) {
    JOptionPane.showMessageDialog(null, "Pilih Data Terlebih Dahulu..!", "Error", JOptionPane.WARNING_MESSAGE);
    } else {
     //Konfirmasi ubah data  
        int ubah = JOptionPane.showConfirmDialog(null, "Anda yakin mengubah data?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
                if (ubah == JOptionPane.YES_OPTION) {
                    
    try {
        pst = con.prepareStatement("UPDATE penjualan SET no_transaksi=?,kode_buku=?,id_pembeli=?,tanggal=?,jumlah=?,harga=?,total=? WHERE no_transaksi=?");
        pst.setString(1, tfNoTransaksi.getText());
        pst.setString(2, cmbKodeBuku.getSelectedItem().toString());
        pst.setString(3, cmbIdPembeli.getSelectedItem().toString());
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        String formatTanggal = sdf.format(jTanggal.getDate());
        pst.setString(4, formatTanggal);
        int jumlah = (int) sJumlah.getValue();
        pst.setInt(5, jumlah);
        int harga = Integer.parseInt(tfHarga.getText());
        pst.setInt(6, harga); 
        int total = jumlah * harga;
        pst.setInt(7, total); 
        pst.setString(8, tfNoTransaksi.getText());
        pst.executeUpdate();
        pst.close();
        JOptionPane.showMessageDialog(null, "Data Berhasil Diubah");
        
        // Mengubah data dalam row di tabel
        int selectedRow = tblPenjualan.getSelectedRow();
        if (selectedRow >= 0) {
            DefaultTableModel model = (DefaultTableModel) tblPenjualan.getModel();
            model.setValueAt(tfNoTransaksi.getText(), selectedRow, 0);
            model.setValueAt(cmbKodeBuku.getSelectedItem().toString(), selectedRow, 1);
            model.setValueAt(cmbIdPembeli.getSelectedItem().toString(), selectedRow, 2);
            model.setValueAt(formatTanggal, selectedRow, 3);
            model.setValueAt(sJumlah.getValue(), selectedRow, 4);
            model.setValueAt(tfHarga.getText(), selectedRow, 5);
            model.setValueAt(total, selectedRow, 6);
        }
                //Menghitung total harga
        int totalBiaya = 0;
        for (int i = 0; i < tblPenjualan.getRowCount(); i++) {
            Object value = tblPenjualan.getValueAt(i, 6);
            if (value != null) {
               totalBiaya += Integer.parseInt(value.toString());
    }
}
         tfTotalBiaya.setText(Integer.toString(totalBiaya));
        
         
                 //Membersihkan inputan
        tfNoTransaksi.setText("");
        cmbKodeBuku.setSelectedItem("--Pilih Kode Buku--");
        cmbIdPembeli.setSelectedItem("--Pilih ID Pembeli--");
        sJumlah.setValue(0);
        tfHarga.setText("");
        tfNoTransaksi.requestFocus();
        auto_number();
        
        } catch (SQLException ex) {
            Logger.getLogger(Penjualan.class.getName()).log(Level.SEVERE, null, ex);
        }
                }
    }
    
    }//GEN-LAST:event_btnUbahActionPerformed

    private void tblPenjualanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPenjualanMouseClicked
        //Menampilkan Data dari Jtable ke TextFiled
        
    int selectedRow = tblPenjualan.getSelectedRow();      
    DefaultTableModel model = (DefaultTableModel) tblPenjualan.getModel();
    
    tfNoTransaksi.setText(model.getValueAt(selectedRow, 0).toString());

    String comboKodeBuku = model.getValueAt(selectedRow, 1).toString();
        for (int i = 0; i < cmbKodeBuku.getItemCount(); i++) {
        if (cmbKodeBuku.getItemAt(i).toString().equalsIgnoreCase(comboKodeBuku)) {
            cmbKodeBuku.setSelectedIndex(i);
        break;
    }
}
     String comboIdPembeli = model.getValueAt(selectedRow, 2).toString();
        for (int i = 0; i < cmbIdPembeli.getItemCount(); i++) {
        if (cmbIdPembeli.getItemAt(i).toString().equalsIgnoreCase(comboIdPembeli)) {
            cmbIdPembeli.setSelectedIndex(i);
        break;
    }
}
           
    try {
        Date date = new SimpleDateFormat("dd-MM-yyyy").parse(model.getValueAt(selectedRow, 3).toString());
        jTanggal.setDate(date);
    } catch (ParseException ex) {
        ex.printStackTrace();
    }

    sJumlah.setValue(Integer.parseInt(model.getValueAt(selectedRow, 4).toString()));
    tfHarga.setText(model.getValueAt(selectedRow, 5).toString());

    
    }//GEN-LAST:event_tblPenjualanMouseClicked

    private void btnKembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKembaliActionPerformed
    new MenuUtama().setVisible(true);
    dispose();
    }//GEN-LAST:event_btnKembaliActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
    //Mengecek nilai yang di input
    if (tfNoTransaksi.getText().equals("") || 
        cmbKodeBuku.getSelectedItem().equals("--Pilih Kode Buku--") || 
        cmbIdPembeli.getSelectedItem().equals("--Pilih ID Pembeli--") || 
        ((Number) sJumlah.getValue()).intValue() == 0 || 
        tfHarga.getText().equals("")) {
    JOptionPane.showMessageDialog(null, "Pilih Data Terlebih Dahulu..!", "Error", JOptionPane.WARNING_MESSAGE);
    } else {
    //Konfirmasi hapus data
    int ubah = JOptionPane.showConfirmDialog(null, "Anda yakin menghapus data?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
           if (ubah == JOptionPane.YES_OPTION) {
               
    // Menghapus data dalam database
        try {
    pst = con.prepareStatement("DELETE FROM penjualan WHERE no_transaksi=?");
    pst.setString(1, tfNoTransaksi.getText());
    pst.executeUpdate();
    pst.close(); // Menutup PreparedStatement setelah digunakan
    JOptionPane.showMessageDialog(null, "Data Berhasil Dihapus");

    } catch (SQLException ex) {
        Logger.getLogger(Buku.class.getName()).log(Level.SEVERE, null, ex);
    }
        
        //Membersihkan inputan
        tfNoTransaksi.setText("");
        cmbKodeBuku.setSelectedItem("--Pilih Kode Buku--");
        cmbIdPembeli.setSelectedItem("--Pilih ID Pembeli--");
        sJumlah.setValue(0);
        tfHarga.setText("");
        tfNoTransaksi.requestFocus();
        auto_number();
        
    //Menghapus data dalam row
    int getSelectedRowForDeletion = tblPenjualan.getSelectedRow();
    if (getSelectedRowForDeletion >= 0) {
        DefaultTableModel model = (DefaultTableModel) tblPenjualan.getModel();
        model.removeRow(getSelectedRowForDeletion);
        JOptionPane.showMessageDialog(null, "Data Berhasil Dihapus"); 
        
    
        //Menghitung total harga
        int totalHarga = 0;
        for (int i = 0; i < model.getRowCount(); i++) {
            Object value = model.getValueAt(i, 6);
            if (value != null) {
                totalHarga += Integer.parseInt(value.toString());
            }
        }
        tfTotalBiaya.setText(Integer.toString(totalHarga));
 }
    }
  }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        //Membersihkan inputan
        tfNoTransaksi.setText("");
        cmbKodeBuku.setSelectedItem("--Pilih Kode Buku--");
        cmbIdPembeli.setSelectedItem("--Pilih ID Pembeli--");
        sJumlah.setValue(0);
        tfHarga.setText("");
        tfBayar.setText("0");
        tfKembalian.setText("0");
        taTampil.setText("");
        tfNoTransaksi.requestFocus();
        auto_number();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnBayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBayarActionPerformed
        // Pembayaran
        int total, bayar, kembalian;
        
        total = Integer.valueOf(tfTotalBiaya.getText());
        bayar = Integer.valueOf(tfBayar.getText());
        
        if (total > bayar ){
            JOptionPane.showMessageDialog(null,"Uang Tidak Cukup Untuk Melakukan Pembayaran...!");
        }else{
            kembalian = bayar - total;
            tfKembalian.setText(String.valueOf(kembalian));
        }
    }//GEN-LAST:event_btnBayarActionPerformed

    private void btnTampilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTampilActionPerformed
String totalBiaya = tfTotalBiaya.getText();
String bayar = tfBayar.getText();
String kembalian = tfKembalian.getText();

DefaultTableModel model = (DefaultTableModel) tblPenjualan.getModel();

taTampil.append("*************************************************\n");
taTampil.append("                     TRANSAKSI                  \n");
taTampil.setFont(taTampil.getFont().deriveFont(Font.BOLD, 13f));
taTampil.append("*************************************************\n");

taTampil.append("   " + "Kode Buku" + "\t" + "Harga" + "\t" + "Total" + "\n");

for (int i = 0; i < model.getRowCount(); i++) {
    // Mendefinisikan Index array sesuai colom di tblPenjualan
    Object kodeObj = model.getValueAt(i, 1);
    Object hargaObj = model.getValueAt(i, 5);
    Object totalObj = model.getValueAt(i, 6);

    // Menampilkan nilai pada indeks yg telah didefinisikan ke String
    String kode = (kodeObj != null) ? kodeObj.toString() : "";
    String harga = (hargaObj != null) ? hargaObj.toString() : "";
    String total = (totalObj != null) ? totalObj.toString() : "";

    taTampil.append("   " + kode + "\t" + harga + "\t" + total + "\n");
}

taTampil.append("\n");
taTampil.append("            " + "Total Biaya    : Rp" + totalBiaya + "\n");
taTampil.append("            " + "Bayar              : Rp" + bayar + "\n");
taTampil.append("            " + "Kembalian     : Rp" + kembalian + "\n");
taTampil.append("*************************************************\n");
taTampil.append("  TERIMA KASIH TELAH BERBELANJA");      
    }//GEN-LAST:event_btnTampilActionPerformed

    private void cmbKodeBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbKodeBukuActionPerformed
        //select Kode buku
        try {
        String sql = "SELECT * FROM buku WHERE kode ='"+cmbKodeBuku.getSelectedItem()+"'";
        rs = pst.executeQuery(sql);

        while (rs.next()) {
            tfHarga.setText(rs.getString("harga"));
        }
        } catch (Exception e){
    
        }
    }//GEN-LAST:event_cmbKodeBukuActionPerformed

    private void tfCariKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfCariKeyReleased
     DefaultTableModel model=(DefaultTableModel) tblPenjualan.getModel();
     TableRowSorter<DefaultTableModel> model1= new TableRowSorter<>(model);
     tblPenjualan.setRowSorter(model1);
     model1.setRowFilter(RowFilter.regexFilter(tfCari.getText()));
    }//GEN-LAST:event_tfCariKeyReleased
   
    
//Membuat No Transaksi Otomatis
private void auto_number() {
    try {
        String sql = "SELECT MAX(right(no_transaksi, 4)) AS no_auto FROM penjualan";
        pst = con.prepareStatement(sql);
        rs = pst.executeQuery();

        if (rs.next()) {
            int maxAutoNumber = rs.getInt("no_auto");
            int nextAutoNumber = maxAutoNumber + 1;

            String formattedAutoNumber = String.format("1%04d", nextAutoNumber);
            tfNoTransaksi.setText(formattedAutoNumber);
        } else {
            // jika data tidak ditemukan maka no transaksi 10001
            tfNoTransaksi.setText("0001");
        }

    } catch (Exception e) {
        e.printStackTrace();
        tfNoTransaksi.setText("0001");
    }
}
       
//Membuat method tanggal
    private void showDate(){
        Date d = new Date();
        SimpleDateFormat s = new SimpleDateFormat("dd-MM-yyyy");
        String date = s.format(d);
        lblDate.setText(date);
        jTanggal.setDate(d);
    }

//Membuat method jam
    private void showTime(){
        new Timer (0, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
               Date d = new Date();
               SimpleDateFormat s = new SimpleDateFormat("hh:mm:ss");
               String time = s.format(d);
               lblTime.setText(time);
            }
        }).start();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Penjualan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Penjualan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Penjualan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Penjualan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Penjualan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBayar;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnKembali;
    private javax.swing.JButton btnTambah;
    private javax.swing.JButton btnTampil;
    private javax.swing.JButton btnUbah;
    private javax.swing.JComboBox<String> cmbIdPembeli;
    private javax.swing.JComboBox<String> cmbKodeBuku;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JPanel inputanPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.toedter.calendar.JDateChooser jTanggal;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblForm;
    private javax.swing.JLabel lblTime;
    private javax.swing.JPanel outputPanel;
    private javax.swing.JSpinner sJumlah;
    private javax.swing.JTextArea taTampil;
    private javax.swing.JPanel tabelPanel;
    private javax.swing.JTable tblPenjualan;
    private javax.swing.JTextField tfBayar;
    private javax.swing.JTextField tfCari;
    private javax.swing.JTextField tfHarga;
    private javax.swing.JTextField tfKembalian;
    private javax.swing.JTextField tfNoTransaksi;
    private javax.swing.JTextField tfTotalBiaya;
    private javax.swing.JPanel utamaPanel;
    // End of variables declaration//GEN-END:variables
}
